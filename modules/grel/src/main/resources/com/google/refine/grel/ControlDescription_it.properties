foreach_index_desc=Valuta l'espressione <i>a</i> in un array. Quindi, per ogni elemento della matrice, lega il suo indice alla variabile <i>i</i> e il suo valore al nome della variabile <i>v</i>, valuta l'espressione <i>e</i> e spinge il risultato sulla matrice dei risultati.
for_non_blank_desc=Valuta l'espressione <i>o</i>. Se non è vuota, lega il suo valore al nome della variabile <i>v</i>, valuta l'espressione <i>eNonBlank</i> e restituisce il risultato. Altrimenti (se <i>o</i> è vuoto), valuta l'espressione <i>eBlank</i> e restituisce il risultato.
for_range_desc=Itera sulla variabile <i>v</i> a partire da "da", incrementando di "step" ogni volta che è inferiore a "a". A ogni iterazione, valuta l'espressione <i>e</i> e inserisce il risultato nell'array dei risultati.
is_blank_desc=Restituisce se <i>o</i> è null o una stringa vuota
is_error_desc=Restituisce se <i>o</i> è un errore
is_non_blank_desc=Restituisce se <i>o</i> non è null e non è una stringa vuota
is_not_null_desc=Restituisce se <i>o</i> non è null
is_null_desc=Restituisce se <i>o</i> è null
is_numeric_desc=Restituisce se <i>o</i> può rappresentare un numero
is_test_desc=Restituisce se <i>o</i> può rappresentare un numero
with_desc=Valuta l'espressione <i>o</i> e lega il suo valore al nome della variabile <i>v</i>. Quindi valuta l'espressione e e restituisce il risultato
isempty_string_desc=Restituisce se <i>o</i> è una stringa vuota
foreach_desc=Valuta l'espressione <i>a</i> in un array. Quindi, per ogni elemento dell'array, lega il suo valore al nome della variabile <i>v</i>, valuta l'espressione <i>e</i> e spinge il risultato nell'array dei risultati.
if_desc=Valuta l'espressione <i>o</i>. Se è vera, valuta l'espressione <i>eTrue</i> e restituisce il risultato. Altrimenti, valuta l'espressione <i>eFalse</i> e restituisce il risultato.
filter_desc=Valuta l'espressione <i>a</i> in un array. Quindi, per ogni elemento dell'array, lega il suo valore al nome della variabile <i>v</i> e valuta l'espressione test che dovrebbe restituire un booleano. Se il booleano è vero, spinge <i>v</i> nell'array dei risultati.
