html_inner_html=Restituisce l'HTML interno di un elemento HTML. Include il testo e gli elementi figli all'interno dell'elemento selezionato. Va usato insieme a parseHtml() e select() per fornire un elemento.
str_parse_uri=Analizza un URI ed estrae i suoi componenti.
math_random_number=Restituisce un numero intero casuale nell'intervallo tra i limiti inferiore e superiore (inclusi). Fornir\u00E0 un numero casuale diverso in ogni cella di una colonna.
str_ends_with=Restituisce un booleano che indica se s termina con sub. Ad esempio, "food".endsWith("ood") restituisce vero, mentre "food".endsWith("odd") restituisce falso.
str_decode=Decodifica una stringa utilizzando la codifica specificata. Le codifiche includono Base16, Base32Hex, Base32, Base64 e Base64Url.
str_diff=Per le stringhe, prende due stringhe e le confronta, restituendo una stringa. Restituisce il resto di o2 a partire dal primo carattere in cui differiscono. Per le date, restituisce la differenza in determinate unit\u00E0 di tempo. Vedere la tabella delle unit\u00E0 di tempo all'indirizzo https://openrefine.org/docs/manual/grelfunctions/#datepartd-s-timeunit.
str_encode=Codifica una stringa utilizzando la codifica specificata. Le codifiche includono Base16, Base32Hex, Base32, Base64 e Base64Url.
str_contains=Restituisce un booleano che indica se s contiene sub, che \u00E8 una sottostringa o un modello di espressione regolare. Per esempio, "food".contains("oo") restituisce vero.
bool_and=Utilizza l'operatore logico AND su due o pi\u00F9 booleani per produrre un booleano. Valuta pi\u00F9 affermazioni in booleani e restituisce vero se tutte le affermazioni sono vere. Ad esempio, (1 < 3).and(1 < 0) restituisce falso perch\u00E9 una condizione \u00E8 vera e l'altra \u00E8 falsa.
bool_not=Utilizza l'operatore logico NOT su un booleano per restituire un booleano. Ad esempio, not(1 > 7) restituisce vero perch\u00E9 1 > 7 \u00E8 falso.
date_inc=Restituisce una data modificata della quantit\u00E0 data nell'unit\u00E0 di tempo data, tra virgolette. Vedere https://openrefine.org/docs/manual/grelfunctions/#incd-n-s-timeunit per una tabella. L'unit\u00E0 predefinita \u00E8 ora. Un valore positivo aumenta la data e un valore negativo la sposta indietro nel tempo.
html_parse_html=Data una cella piena di testo formattato in HTML, parseHtml() semplifica i tag HTML (ad esempio rimuovendo ''/'' alla fine dei tag auto-chiudenti), chiude qualsiasi tag non chiuso e inserisce interruzioni di riga e rientri per un codice pi\u00F9 pulito. Una cella non pu\u00F2 memorizzare il risultato di parseHtml() a meno che non lo si converta con toString(): per esempio, value.parseHtml().toString().
str_find=Fornisce un array di tutte le sottostringhe consecutive all'interno della stringa s che corrispondono alla sottostringa o al modello di espressione regolare p. \u00C8 possibile fornire una sottostringa inserendola tra virgolette. Vedere anche match().
str_fingerprint=Restituisce l'impronta digitale di s, una stringa che \u00E8 il primo passo nei metodi di raggruppamento delle impronte digitali: taglia gli spazi bianchi, converte tutti i caratteri in minuscolo, rimuove la punteggiatura, ordina le parole in ordine alfabetico, ecc.
str_ngram=Restituisce una matrice di parole n-gram di s. In altre parole, elenca tutte le possibili combinazioni consecutive di n parole nella stringa.
str_match=Tenta di confrontare la stringa s nella sua interezza con lo schema di espressione regolare p e, se lo schema viene trovato, produce un array di tutti i gruppi catturanti (trovati in ordine). Vedere anche find().
str_phonetic=Restituisce una codifica fonetica di una stringa, basata su un algoritmo fonetico disponibile. Pu\u00F2 essere uno dei seguenti metodi fonetici supportati: metaphone, doublemetaphone, metaphone3, soundex, cologne. L'impostazione predefinita \u00E8 metaphone3.
str_reinterpret=Restituisce s reinterpretato attraverso i codificatori di caratteri indicati. \u00C8 necessario fornire una delle codifiche supportate per ciascuna fonte originale e per l'output di destinazione: https://docs.oracle.com/javase/1.5.0/docs/guide/intl/encoding.doc.html. Si noti che le virgolette sono necessarie intorno ai codificatori di caratteri.
str_replace_chars=Restituisce la stringa ottenuta sostituendo un carattere in s, identificato da find, con il carattere corrispondente identificato da replace. Non \u00E8 possibile utilizzare questa funzione per sostituire un singolo carattere con pi\u00F9 di un carattere.
str_replace=Restituisce la stringa ottenuta sostituendo la stringa find con la stringa replace nella stringa inserita. Ad esempio, ''The cow jumps over the moon and moos''.replace(''oo'', ''ee'') restituisce la stringa ''The cow jumps over the meen and mees''. Find pu\u00F2 essere un modello di espressione regolare. Ad esempio, ''The cow jumps over the moon and moos''.replace(/\\s+/, "_") restituir\u00E0 ''The_cow_jumps_over_the_moon_and_moos''
str_sha1=Restituisce l'hash SHA-1 di un oggetto. Se viene inserito qualcosa di diverso da una stringa (array, numero, data, ecc.), sha1() lo convertir\u00E0 in una stringa e fornir\u00E0 l'hash della stringa.
str_split_by_lengths=Restituisce l'array di stringhe ottenuto dividendo s in sottostringhe con le lunghezze date. Per esempio, "internationalization".splitByLengths(5, 6, 3) restituisce un array di 3 stringhe: [ "inter", "nation", "ali" ]. I caratteri in eccesso vengono scartati dall'array di output.
str_split=Restituisce l'array di stringhe ottenute dividendo s per sep. Il separatore pu\u00F2 essere una stringa o un modello di espressione regolare. Se preserveTokens \u00E8 vero, i segmenti vuoti vengono conservati.
xml_parsexml=Data una cella piena di testo formattato in XML, parseXml() restituisce un documento XML completo e aggiunge i tag di chiusura mancanti.
math_ln=Restituisce il logaritmo naturale di n.
arr_zip=Combina due o pi\u00F9 matrici in un'unica matrice di matrici, in cui gli elementi con lo stesso indice delle matrici di ingresso vengono raggruppati per formare una sottoriga nella matrice di uscita.
str_index_of=Restituisce l'indice del primo carattere di sub quando si presenta per la prima volta in s; oppure, restituisce -1 se s non contiene sub. Ad esempio, "internationalization".indexOf("nation") restituisce 5.
str_parse_json=Analizza una stringa come JSON.
math_log=Restituisce il logaritmo in base 10 di n.
math_mod=Restituisce il modulo n1 di n2.
math_max=Restituisce il maggiore di due numeri.
math_min=Restituisce il minore di due numeri.
str_partition=Restituisce un array di stringhe [ a, fragment, z ] dove a \u00E8 la sottostringa all'interno di s prima della prima occorrenza di fragment e z \u00E8 la sottostringa dopo fragment. Il frammento pu\u00F2 essere una stringa o una espressione regolare. Se omitFragment \u00E8 vero, frag non viene restituito.
str_to_lowercase=Restituisce la stringa s convertita in caratteri minuscoli.
str_to_title_case=Restituisce la stringa s con una lettera maiuscola all'inizio di ogni parola e il resto delle lettere minuscole. Ad esempio, ''Once upon a midnight DREARY''.toTitlecase() restituisce la stringa ''Once Upon A Midnight Dreary''. Opzionalmente, una stringa di caratteri delimitatori usati per separare le parole. Il primo carattere e il primo carattere non delimitatore dopo un delimitatore saranno maiuscoli. Ad esempio, "jean-michel jarre".toTitlecase(" -") restituisce "Jean-Michel Jarre".
str_unescape=Dischiude s nella modalit\u00E0 di escape indicata. La modalit\u00E0 pu\u00F2 essere una delle seguenti: ''html'', ''xml'', ''csv'', ''url'', ''javascript''. Si noti che le virgolette sono necessarie intorno alla modalit\u00E0.
fun_length=Restituisce la lunghezza della stringa s come numero o la dimensione dell'array a, cio\u00E8 il numero di oggetti al suo interno. Gli array possono essere vuoti, in tal caso length() restituir\u00E0 0.
fun_slice=Data una stringa, restituisce la sottostringa a partire dall'indice di caratteri from e fino all'indice di caratteri to. Se l'argomento to viene omesso, viene restituita alla fine di s. Ricordate che gli indici dei caratteri partono da zero. Dato un array, restituisce una sotto-array dal primo indice fornito fino all'ultimo indice fornito. Se il valore to viene omesso, si intende la fine dell'array. Solo slice.
fun_to_string=Prende qualsiasi tipo di valore (stringa, numero, data, booleano, errore, null) e fornisce una versione stringa di quel valore. \u00C8 possibile convertire i numeri in stringhe con arrotondamento, utilizzando un formato stringa opzionale. Vedere https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html. \u00C8 inoltre possibile convertire le date in stringhe utilizzando la sintassi del parsing della data. Vedere https://openrefine.org/docs/manual/grelfunctions/#date-functions.
fun_to_date=Restituisce l'oggetto inserito convertito in un oggetto data. Senza argomenti, restituisce il formato esteso ISO 8601. Con argomenti, \u00E8 possibile controllare il formato di output. Con monthFirst: imposta falso se la data \u00E8 formattata con il giorno prima del mese. Con formatN: tenta di analizzare la data utilizzando un elenco ordinato di possibili formati. Fornisce formati basati sulla sintassi SimpleDateFormat: <a href="http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html">SimpleDateFormat</a>.
arr_args_to_array=Restituisce tutti gli argomenti che gli sono stati passati come array
arr_join=Unisce gli elementi dell'array con sep e restituisce il tutto come stringa.
arr_reverse=Inverte l'array a.
arr_in_array=Restituisce vero se l'array contiene la stringa desiderata e falso altrimenti. Non converte i tipi di dati.
arr_sort=Ordina l'array in ordine crescente. L'ordinamento distingue fra maiuscole e minuscole, le maiuscole vengono prima delle minuscole.
arr_uniques=Restituisce l'array con la rimozione dei duplicati. Distingue fra maiuscole e minuscole.
bool_or=Utilizza l'operatore logico OR su due o pi\u00F9 booleani per restituire un booleano. Per esempio, (1 < 3).or(1 > 7) restituisce vero perch\u00E9 almeno una delle condizioni (la prima) \u00E8 vera.
date_part=Restituisce una parte di una data. Il tipo di dati restituito dipende dall'unit\u00E0. Vedere https://openrefine.org/docs/manual/grelfunctions/#datepartd-s-timeunit, https://openrefine.org/docs/manual/grelfunctions#date-functions per una tabella.
bool_xor=Utilizza l'operatore logico XOR (exclusive-or) su due o pi\u00F9 booleani per restituire un booleano. Valuta pi\u00F9 affermazioni e restituisce vero se solo una di esse \u00E8 vera. Per esempio, (1 < 3).xor(1 < 7) restituisce falso perch\u00E9 pi\u00F9 di una condizione \u00E8 vera.
date_now=Restituisce l'ora corrente secondo l'orologio di sistema, nel formato esteso ISO 8601 (convertito in UTC). Ad esempio, 10:53 (e 00 secondi) del 26 novembre 2020 in EST restituisce [data 2020-11-26T15:53:00Z].
math_abs=Restituisce il valore assoluto di un numero.
math_acos=Restituisce l'arcocoseno di un angolo, nell'intervallo da 0 a PI.
math_asin=Restituisce l'arcoseno di un angolo, nell'intervallo da -PI/2 a PI/2.
math_atan=Restituisce l'arcotangente di un angolo, nell'intervallo da -PI/2 a PI/2.
math_atan2=Converte le coordinate rettangolari (n1, n2) in polari (r, theta). Restituisce il numero theta.
math_ceil=Restituisce il limite massimo di un numero.
math_combin=Restituisce il numero di combinazioni per n2 elementi divisi per n1.
math_cos=Restituisce il coseno trigonometrico di un angolo.
math_cosh=Restituisce il coseno iperbolico di un valore.
math_degrees=Converte un angolo da radianti a gradi.
math_even=Arrotonda il numero fino al numero intero pari pi\u00F9 vicino.
math_exp=Restituisce e alla potenza di n.
math_fact=Restituisce il fattoriale di un numero, a partire da 1.
math_factn=Restituisce il fattoriale di n1, a partire da n2.
math_floor=Restituisce il valore minimo di un numero.
math_gcd=Restituisce il massimo comune denominatore di due numeri.
math_lcm=Restituisce il minimo comune multiplo di due numeri.
math_multinomial=Calcola il multinomio di un numero o di una serie di numeri.
math_odd=Arrotonda il numero fino al numero intero dispari pi\u00F9 vicino.
math_pow=Restituisce n1 elevato alla potenza di n2.
math_quotient=Restituisce la parte intera di una divisione (troncata, non arrotondata), se fornita con un numeratore e un denominatore.
math_radians=Converte un angolo da gradi in radianti.
math_round=Arrotonda un numero al numero intero pi\u00F9 vicino.
math_sin=Restituisce il seno trigonometrico di un angolo.
math_sinh=Restituisce il seno iperbolico di un angolo.
math_sum=Restituisce la somma dei numeri dell'array. Ignora gli elementi non numerici. Restituisce 0 se l'array non contiene numeri.
math_tan=Restituisce la tangente trigonometrica di un angolo.
math_tanh=Restituisce la tangente iperbolica di un angolo.
str_chomp=Restituisce una copia della stringa s con la stringa sep rimossa dalla fine se s termina con sep; altrimenti, restituisce s.
str_detect_language=Rileva la lingua della stringa data e fornisce il codice della lingua.
str_escape=Esegue l'escape di s nella modalit\u00E0 di escape indicata. La modalit\u00E0 pu\u00F2 essere una delle seguenti: ''html'', ''xml'', ''csv'', ''url'', ''javascript'', ''urlpath'', ''urlform'', ''urlfragment''. Si noti che le virgolette sono necessarie intorno alla modalit\u00E0.
str_last_index_of=Restituisce l'indice del primo carattere di sub, come ultimo contenuto in s; oppure, restituisce -1 se s non contiene sub. Ad esempio, "parallel".lastIndexOf("a") restituisce 3 (che indica la seconda ''a'').
str_md5=Restituisce l'hash MD5 di un oggetto. Se viene alimentato qualcosa di diverso da una stringa (array, numero, data, ecc.), md5() lo convertir\u00E0 in una stringa e fornir\u00E0 l'hash della stringa.
str_ngram_fingerprint=Restituisce l'impronta digitale n-gram di s.
str_range=Restituisce un array in cui a e b sono rispettivamente l'inizio e la fine dell'intervallo e c \u00E8 l'incremento.
str_replace_each=Sostituisce ogni occorrenza di una sottostringa in una stringa con un'altra sottostringa.
str_rpartition=Restituisce un array di stringhe [ a, fragment, z ] dove a \u00E8 la sottostringa all'interno di s prima dell'ultima occorrenza di fragment e z \u00E8 la sottostringa dopo l'ultima istanza di fragment. Se omitFragment \u00E8 vero, frag non viene restituito.
str_smart_split=Restituisce l'array di stringhe ottenute dividendo s per sep, oppure indovinando la separazione con tab o virgola se non viene fornito sep. Gestisce correttamente le virgolette e comprende i caratteri cancellati. Il separatore pu\u00F2 essere una stringa o un modello di espressione regolare.
str_split_by_char_type=Restituisce un array di stringhe ottenute dividendo s in gruppi di caratteri consecutivi ogni volta che i caratteri cambiano categoria Unicode.
str_starts_with=Restituisce un booleano che indica se s inizia con sub. Ad esempio, "food".startsWith("foo") restituisce vero, mentre "food".startsWith("bar") restituisce falso.
str_to_uppercase=Restituisce la stringa s convertita in caratteri maiuscoli.
str_trim=Restituisce una copia della stringa s con la rimozione degli spazi bianchi iniziali e finali.
str_unicode=Restituisce un array di stringhe che descrivono ogni carattere di s nella notazione Unicode completa.
str_unicode_type=Restituisce un array di stringhe che descrivono ogni carattere di s in base al loro tipo Unicode.
xml_innerxml=Restituisce gli elementi XML interni di un elemento XML. Non restituisce il testo direttamente all'interno dell'elemento XML scelto, ma solo il contenuto dei suoi figli. Usarlo insieme a parseXml() e select() per fornire un elemento.
xml_owntext=Restituisce solo il testo direttamente all'interno dell'elemento XML o HTML selezionato, ignorando il testo all'interno degli elementi figli (per questo, usare innerXml()). Usarlo insieme a un parser e a select() per fornire un elemento.
xml_parent=Restituisce il nodo genitore o null se non c'\u00E8 un genitore. Usare insieme a parseHtml() e select() per fornire un elemento.
xml_scripttext=Restituisce i dati combinati di un elemento HTML/XML. I dati sono, per esempio, l'interno di un tag &lt;script&gt;.\nSi noti che i dati NON sono il testo dell'elemento.\nUtilizzare htmlText() per ottenere il testo visibile all'utente e scriptText() per il contenuto di &lt;script&gt;, &lt;style&gt;, ecc.\nUtilizzare scriptText() insieme a parseHtml() e select().
xml_selectxml=Restituisce un array di tutti gli elementi desiderati da un documento HTML o XML, se l'elemento esiste. Gli elementi sono identificati utilizzando la sintassi del selettore Jsoup: https://jsoup.org/apidocs/org/jsoup/select/Selector.html.
xml_wholetext=Seleziona il testo (non codificato) di un elemento e dei suoi figli, comprese le nuove righe e gli spazi, e restituisce una stringa di testo non codificato e non normalizzato. Usare insieme a parseHtml() e select() per fornire un elemento.
xml_xmlattr=Restituisce una stringa da un attributo di un elemento XML o HTML. Usare insieme a parseHtml() o parseXml() per puntare prima a un elemento.
xml_xmltext=Restituisce una stringa di testo all'interno di un elemento HTML o XML (compresi tutti gli elementi figli), rimuovendo i tag e le interruzioni di riga all'interno della stringa. Usare insieme a parseHtml() o parseXml() e select() per fornire un elemento.
fun_coalesce=Restituisce il primo non nullo di una serie di oggetti (qualsiasi tipo di dati: stringa, data, numero, booleano, ecc.).
fun_cross=Cerca il valore dato nella colonna di destinazione del progetto di destinazione e restituisce un array di righe corrispondenti. Due valori corrispondono se e solo se hanno la stessa rappresentazione di stringa. Il primo argomento sar\u00E0 interpretato come cell.value se impostato su cell. Il secondo argomento sar\u00E0 interpretato come il nome del progetto corrente, se omesso o impostato su "". Il terzo argomento sar\u00E0 interpretato come la colonna dell'indice (che inizia da 0) se omesso o impostato su "".
fun_facet_count=Restituisce il numero di faccette corrispondenti al valore di scelta dato, cercando la facetExpression nel choiceValue in columnName.
fun_get=Se o ha dei campi denominati, restituisce il campo denominato ''da'' di o. Se o \u00E8 un array, restituisce un sub-array o[from, to]. Se o \u00E8 una stringa, restituisce o.substring(from, to).
fun_has_field=Restituisce un booleano che indica se o ha un campo membro chiamato name.
fun_jsonize=Cita un valore come valore letterale JSON.
fun_time_since_unix_epoch_to_date=Restituisce un numero convertito in una data basata su Unix Epoch Time. Il numero pu\u00F2 essere Unix Epoch Time in una delle seguenti unit\u00E0 supportate: secondo, millisecondo, microsecondo. L'impostazione predefinita \u00E8 secondo.
fun_to_number=Restituisce una stringa convertita in numero. Tenter\u00E0 di convertire altri formati in una stringa e poi in un numero. Se il valore \u00E8 gi\u00E0 un numero, restituir\u00E0 il numero.
fun_type=Restituisce una stringa con il tipo di dati di o, come undefined, stringa, numero, booleano, ecc.
