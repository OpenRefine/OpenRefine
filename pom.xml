<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.openrefine</groupId>
  <artifactId>openrefine</artifactId>
  <packaging>pom</packaging>
  <version>3.4-SNAPSHOT</version>

  <name>OpenRefine</name>
  <description>OpenRefine is a free, open source power tool for working with messy data and improving it</description>
  <url>http://openrefine.org/</url>

  <modules>
        <module>main</module>
        <module>server</module>
        <module>extensions</module>
        <module>packaging</module>
  </modules>

  <properties>
    <jee.path>/</jee.path>
    <jee.port>3333</jee.port>
    <refine.data>/tmp/refine</refine.data>
    <surefire.version>2.22.2</surefire.version>
    <surefireArgs></surefireArgs>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jackson.version>2.9.10</jackson.version>
  </properties>

  <scm>
    <connection>scm:git:http://github.com/OpenRefine/OpenRefine</connection>
    <url>http://github.com/OpenRefine/OpenRefine</url>
  </scm>

  <build>
    <!-- It is nice for "mvn" with no arguments to do a reasonable default. -->
    <defaultGoal>install</defaultGoal>
    
    <finalName>openrefine</finalName>
    <resources>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>server/src</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
          <showDeprecation>false</showDeprecation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3</version>
        <configuration>
          <skip>true</skip>
          <mainClass>none</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <argLine>${surefireArgs}</argLine>
          <suiteXmlFiles>
            <suiteXmlFile>main/tests/server/conf/tests.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <executions>
            <execution>
                <id>prepare-agent</id>
                <goals>
                    <goal>prepare-agent</goal>
                </goals>
                <phase>process-test-resources</phase>
                <configuration>
                    <destFile>${project.build.directory}/report/jacoco.exec</destFile>
                    <propertyName>surefireArgs</propertyName>
                </configuration>
            </execution>
            <execution>
                <phase>test</phase>
                <goals>
                    <goal>report</goal>
                </goals>
                <configuration>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                </configuration>
            </execution>
            <execution>
                <id>merge</id>
                <goals>
                     <goal>merge</goal>
                </goals>
                <phase>prepare-package</phase>
               <configuration>
                     <destFile>${project.build.directory}/report/jacoco-merged.exec</destFile>
                     <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}/report</directory>
                            <includes>
                                <include>jacoco.exec</include>
                                <include>jacoco-merged.exec</include>
                            </includes>
                        </fileSet>
                        <fileSet>
                            <directory>extensions/target/report</directory>
                            <includes>
                                <include>*.exec</include>
                            </includes>
                        </fileSet>
                     </fileSets> 
                </configuration>
             </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <dependencies>
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.3</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectories>
             <sourceDirectory>main/src</sourceDirectory>
             <sourceDirectory>extensions/jython/src</sourceDirectory>
             <sourceDirectory>extensions/wikidata/src</sourceDirectory>
             <sourceDirectory>extensions/database/src</sourceDirectory>
             <sourceDirectory>extensions/phonetic/src</sourceDirectory>
          </sourceDirectories>
        </configuration>
       </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- dependencies are stored in the relevant submodules:
          see main/pom.xml, server/pom.xml and each extension.
    -->
  </dependencies>
 
</project>

