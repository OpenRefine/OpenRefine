name: Continuous Integration

on:
  push:
    paths-ignore:
      - 'docs/**'

jobs:
  prepare_ui_test_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - id: set-matrix
        run: npm install --save glob && node main/tests/cypress/build-test-matrix.js
        env:
          browsers: chrome
  ui_test:
    needs: prepare_ui_test_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.prepare_ui_test_matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Restore dependency cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8

      - name: Build OpenRefine
        run: ./refine build

      - name: Start OpenRefine
        run: |
          echo REFINE_MIN_MEMORY=1400M >> ./refine.ini
          echo REFINE_MEMORY=4096M >> ./refine.ini
          ./refine run_test

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install Edge
        if: matrix.browser == 'edge'
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo rm microsoft.gpg
          sudo apt-get update
          sudo apt-get install microsoft-edge-dev

      - name: Restore Tests dependency cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/cache
            ~/.cache
            **/node_modules
            !~/cache/exclude
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install test dependencies
        run: |
          cd ./main/tests/cypress
          npm i -g yarn
          yarn install

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          working-directory: ./main/tests/cypress
          spec: ${{ matrix.specs }}
          wait-on: 'http://localhost:3333'
          record: true
          # group: '${{ matrix.browser }}-${{ github.run_id }}'
          # parallel: true
          # ci-build-id: '${{ github.run_id }}'
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_BUILD_ID: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'

          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
