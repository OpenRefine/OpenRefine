name: Java CI

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 'postgres'
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3

    - uses: actions/checkout@v2.3.4

    - name: Restore dependency cache
      uses: actions/cache@v2.1.3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Configure connections to databases
      id: configure_db_connections
      run: cat extensions/database/tests/conf/github_actions_tests.xml | sed -e "s/MYSQL_PORT/${{ job.services.mysql.ports[3306] }}/" | sed -e "s/POSTGRES_PORT/${{ job.services.postgres.ports[5432] }}/" > extensions/database/tests/conf/tests.xml

    - name: Populate databases with test data
      id: populate_databases_with_test_data
      run: |
        mysql -u root -h ${{ job.services.mysql.ports[3306] }} -proot < extensions/database/tests/conf/travis-mysql.sql
        psql -U postgres test_db -p ${{ job.services.postgres.ports[5432] }} < extensions/database/tests/conf/travis-pgsql.sql

    - name: Build and test with Maven
      run: |
        mvn jacoco:prepare-agent test
        mvn prepare-package -DskipTests=true
        mvn jacoco:report

    - name: Submit test coverage to coveralls Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
