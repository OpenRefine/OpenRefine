
package org.openrefine.browsing.util;

import java.util.Collections;
import java.util.Map;

import org.openrefine.browsing.facets.FacetState;

/**
 * Gathers statistics about distinct string representations of values generated by an evaluable.
 * <p>
 * TODO this is not optimized so far ({@code Map<String, Long>} could probably be made more memory efficient, the
 * serialization of the object could be controlled).
 * 
 * @author Antonin Delpeuch
 *
 */
public class StringValuesFacetState implements FacetState {

    private static final long serialVersionUID = 1L;
    final protected Map<String, Long> _counts;
    final protected long _errors;
    final protected long _blanks;

    public StringValuesFacetState() {
        this(Collections.emptyMap(), 0L, 0L);
    }

    public StringValuesFacetState(Map<String, Long> counts, long errors, long blanks) {
        _counts = counts;
        _errors = errors;
        _blanks = blanks;
    }

    public Map<String, Long> getCounts() {
        return _counts;
    }

    public long getErrorCount() {
        return _errors;
    }

    public long getBlankCount() {
        return _blanks;
    }
}
